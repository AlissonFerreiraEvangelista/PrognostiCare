version: '3.8'
services:
  nginx:
    container_name: nginx
    build:
      dockerfile: nginx.dockerfile
      context: .
    image: nginx
    restart: always
    ports:
    - "80:80"
    networks:
      - api-network
    volumes:
    - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
    - app
    - app1

  postgresdb:
    container_name: postgres
    build:
      context: .
      dockerfile: postgres.dockerfile
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    networks:
      - api-network

  app:
    build:
      dockerfile: Dockerfile
      context: .
    image: api_app
    container_name: api_app
    env_file: ./env.properties
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/postgres
      - SPRING_DATASOURCE_USERNAME=prognosticare
      - SPRING_DATASOURCE_PASSWORD=prognosticare
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080"
    networks:
      - api-network
    depends_on:
      - "postgresdb"

  app1:
    build:
      dockerfile: Dockerfile
      context: .
    image: api_app
    container_name: api_app-1
    env_file: ./env.properties
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/postgres
      - SPRING_DATASOURCE_USERNAME=prognosticare
      - SPRING_DATASOURCE_PASSWORD=prognosticare
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8080"
    networks:
      - api-network
    depends_on:
      - "postgresdb"   

networks:
  api-network:
    driver: bridge
